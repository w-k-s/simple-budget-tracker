openapi: 3.0.0
info:
  title: Simple Budget
  version: 1.0.0
  contact:
    name: w-k-s
  description: A RESTful API to manage home finances
security: []
servers:
  - url: ""
    description: ""
paths:
  /api/v1/user:
    post:
      summary: Register a new user
      description: ""
      parameters: []
      operationId: User
      responses:
        "201":
          description: User created successfully
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/CreateUserResponse"
        "400":
          description: Validation Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
        description: ""
  /health:
    get:
      summary: Health check
      description: Performs health check
      parameters: []
      operationId: Health
      responses:
        default:
          description: Default response
      tags:
        - Health
components:
  links: {}
  callbacks: {}
  schemas:
    CreateUserRequest:
      description: Request obejct to register a new user
      title: CreateUserRequest
      type: object
      properties:
        email:
          description: Unique email to register a user
          type: string
      required:
        - email
    CreateUserResponse:
      description: Response object when user created successfully
      title: CreateUserResponse
      type: object
      properties:
        email:
          description: Unique email to register a user
          type: string
        id:
          description: Unique id of the user
          type: integer
      required:
        - email
        - id
    Problem:
      description: RFC-7807 Problem Object
      title: Problem
      type: object
      properties:
        type:
          description: ' URI reference [RFC3986] that identifies the problem type.  This specification encourages that, when dereferenced, it provide human-readable documentation for theproblem type (e.g., using HTML).  When this member is not present, its value is assumed to be"about:blank"'
          type: string
        title:
          description: >-
            A short, human-readable summary of the problem type.  It SHOULD NOT
            change from occurrence to occurrence of the problem, except for
            purposes of localization (e.g., using proactive content negotiation)
          type: string
        status:
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: integer
        detail:
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem
          type: string
        instance:
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.  It may or may not yield further information if
            dereferenced
          type: string
      required:
        - type
        - title
        - status
        - instance
        - detail
tags:
  - name: User
    description: A registered user
  - name: Health
    description: Health check endpoints
